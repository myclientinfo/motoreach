<?php/** * @package auction * * These classes are a complete auction framework, ready to implement using a minimum amount of procedural PHP code,  * and a templating system like Smarty. The database abstraction layer AdoDB is used. * @version $Id: config.php,v 1.1.1.1 2005/03/01 23:58:26 nicolasconnault Exp $ * @copyright 2005  * Config file: Change these options to customize your auction framework. These are the default options * @todo Using the admin panel, record these options in the database, under auction_config */// Bid amount flag. Two options: either the bid amount is restricted by the auction, or it is chosen by the sellerdefine("BID_INCREMENT_TYPE", "auction"); # possible options: "auction" or "seller"// If the increment type is "auction", what is the increment value that will apply to all items?define("BID_INCREMENT_VALUE", 2); # In dollars// If chosen by the seller, what are the minimum and maximum values allowed for the bid increment?define("BID_INCREMENT_VALUE_MIN", 1); # In dollarsdefine("BID_INCREMENT_VALUE_MAX", 10); # In dollars// If the increment value is determined by proportion of the initial price, what proportion should that be?define("BID_INCREMENT_PROPORTION", 10); # In percentage// Set the amount of information a bidder can get about a sellerdefine("BIDDER_ACCESS_SELLER_INFO", 'full'); # Other options: "partial" or "none". Must set flags manually if "partial"// Set the amount of information a bidder can get about an itemdefine("BIDDER_ACCESS_ITEM_INFO", 'full'); # Other options: "partial" or "none". Must set flags manually if "partial"define("BIDDER_ACCESS_ITEM_START_PRICE", true);define("BIDDER_ACCESS_ITEM_BIDS", true);define("BIDDER_ACCESS_ITEM_RESERVE", true);define("BIDDER_ACCESS_ITEM_CURRENT_PRICE", true);define("BIDDER_ACCESS_ITEM_INCREMENT", true);define("BIDDER_ACCESS_ITEM_END_DATE", true);?>